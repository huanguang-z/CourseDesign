Microsoft (R) Macro Assembler Version 6.11		    05/19/23 16:25:47
tempfile.asm						     Page 1 - 1


 0000				DATAS SEGMENT
 0000 54 45 4D 50 2E 74		   FNAME DB 'TEMP.txt',0
       78 74 00
 0009 46 69 6C 65 20 6E		   ERROR1 DB 'File not found' , 07H, 0
       6F 74 20 66 6F 75
       6E 64 07 00
 0019 52 65 61 64 69 6E		   ERROR2 DB 'Reading error' , 07H, 0
       67 20 65 72 72 6F
       72 07 00
 0028 4E 75 6D 62 65 72			STRING1 DB  'Number of $' ;各类字符提示信息
       20 6F 66 20 24
 0033 3A 20 24				STRING2 DB ': $'
 0036 4E 75 6D 62 65 72			STRING3 DB 'Number of Others $'
       20 6F 66 20 4F 74
       68 65 72 73 20 24
 0048  001A [				ARRAY DB 26 DUP(0);字母个数数组
        00
       ]
 0062 00				OTHERS DB 0
 0063 00				BUFFER DB ?;数据缓冲区
 0064 32				EOF DB 032H
 0065 0D 0A 44 6F 20 79			ASK_1 DB 13,10,'Do you want to calculate the number of letters?','$'
       6F 75 20 77 61 6E
       74 20 74 6F 20 63
       61 6C 63 75 6C 61
       74 65 20 74 68 65
       20 6E 75 6D 62 65
       72 20 6F 66 20 6C
       65 74 74 65 72 73
       3F 24
 0097 0D 0A 50 6C 65 61			ASK_2 DB 13,10,'Please input Y/N:','$'
       73 65 20 69 6E 70
       75 74 20 59 2F 4E
       3A 24
 00AB 0D 0A 44 6F 20 79			ASK_3 DB 13,10,'Do you want to continue to calculate the number of letters?','$'
       6F 75 20 77 61 6E
       74 20 74 6F 20 63
       6F 6E 74 69 6E 75
       65 20 74 6F 20 63
       61 6C 63 75 6C 61
       74 65 20 74 68 65
       20 6E 75 6D 62 65
       72 20 6F 66 20 6C
       65 74 74 65 72 73
       3F 24
 00E9 0D 0A 54 68 65 20			ANS DB 13,10,'The character is wrong, please input again','$'
       63 68 61 72 61 63
       74 65 72 20 69 73
       20 77 72 6F 6E 67
       2C 20 70 6C 65 61
       73 65 20 69 6E 70
       75 74 20 61 67 61
       69 6E 24

 0116 20 20 20 20 20 20			 infor1 db  "                welocom you to come here listeng!", '$'
       20 20 20 20 20 20
       20 20 20 20 77 65
       6C 6F 63 6F 6D 20
       79 6F 75 20 74 6F
       20 63 6F 6D 65 20
       68 65 72 65 20 6C
       69 73 74 65 6E 67
       21 24
					
 0148 00C4 0106				 mus_freg dw 196,262
 014C  0106 0126 014A				  dw 262,294,330
 0152  0188 014A 014A				  dw 392,330,330
 0158  014A 00C4				  dw 330,196
 015C  0106					  dw 262
 015E  0126 0106 00DC				  dw 294,262,220
 0164  00C4 00C4				  dw 196,196
 0168  0106 0106 0126				  dw 262,262,294,330
       014A
 0170  01B8 014A 0188				  dw 440,330,392
 0176  014A 0126				  dw 330,294
 017A  0106					  dw 262
 017C  0126 0188				  dw 294,392
 0180  014A 0126				  dw 330,294
 0184  014A 0188				  dw 330,392
 0188  0188 014A 0188				  dw 392,330,392
 018E  01B8 020C 01B8				  dw 440,524,440
 0194  014A 0126 0106				  dw 330,294,262
 019A  0126 014A 014A				  dw 294,330,330
 01A0  00C4 0188				  dw 196,392
 01A4  014A 014A				  dw 330,330
 01A8  0126 0106 0106				  dw 294,262,262
 01AE  00C4 0126 0106				  dw 196,294,262
 01B4  014A 0126 0106				  dw 330,294,262
 01BA  0106					  dw 262
 01BC  FFFF					  dw -1
 01BE 0019 004B				 mus_time  dw 25,75
 01C2  0032 000C 000C				  dw 50,12,12
 01C8  0019 0019 0019				  dw 25,25,25
 01CE  0019 0032				  dw 25,50
 01D2  004B					  dw 75
 01D4  0019 0019 0019				  dw 25,25,25
 01DA  007D 0019				  dw 125,25
 01DE  004B 0032 000C				  dw 75,50,12,12
       000C
 01E6  0019 0019 0032				  dw 25,25,50
 01EC  0019 0019				  dw 25,25
 01F0  004B					  dw 75
 01F2  0032 0019				  dw 50,25
 01F6  0019 0064				  dw 25,100
 01FA  0019 004B				  dw 25,75
 01FE  0019 0019 0019				  dw 25,25,25
 0204  0019 0019 004B				  dw 25,25,75
 020A  0019 0032 0019				  dw 25,50,25
 0210  0032 0019 007D				  dw 50,25,125
 0216  0019 0064				  dw 25,100
 021A  0019 0019				  dw 25,25
 021E  0019 0019 004B				  dw 25,25,75
 0224  0019 0032 0019				  dw 25,50,25
 022A  0032 000C 000C				  dw 50,12,12
 0230  00C8					  dw 200

 0232 49 4E 50 55 54 20			MESG1 		DB 		'INPUT YOUR USERNAME: $'		;提示字符
       59 4F 55 52 20 55
       53 45 52 4E 41 4D
       45 3A 20 24
 0248 49 4E 50 55 54 20			MESG2  		DB 		'INPUT YOUR PASSWORD: $' 
       59 4F 55 52 20 50
       41 53 53 57 4F 52
       44 3A 20 24
 025E 2D 2D 2D 2D 2D 55			ERROR  		DB 	'-----USERNAME OR PASSWORD ERROR!----$'
       53 45 52 4E 41 4D
       45 20 4F 52 20 50
       41 53 53 57 4F 52
       44 20 45 52 52 4F
       52 21 2D 2D 2D 2D
       24
 0283 0D 0A 20 20 20 2B			WELCOME 	DB  0DH, 0AH, '   +-----------------------------------+', 0DH, 0AH
       2D 2D 2D 2D 2D 2D
       2D 2D 2D 2D 2D 2D
       2D 2D 2D 2D 2D 2D
       2D 2D 2D 2D 2D 2D
       2D 2D 2D 2D 2D 2D
       2D 2D 2D 2D 2D 2B
       0D 0A
 02AF  20 20 20 7C 20 20					DB '   |                    	       |', 0DH, 0AH
       20 20 20 20 20 20
       20 20 20 20 20 20
       20 20 20 20 20 20
       09 20 20 20 20 20
       20 20 7C 0D 0A
 02D2  20 20 20 7C 20 20					DB '   |                     	       |', 0DH, 0AH			   
       20 20 20 20 20 20
       20 20 20 20 20 20
       20 20 20 20 20 20
       20 09 20 20 20 20
       20 20 20 7C 0D 0A
 02F6  20 20 20 7C 20 20					DB '   |    Welcome to project 1 of ZWR    |', 0DH, 0AH
       20 20 57 65 6C 63
       6F 6D 65 20 74 6F
       20 70 72 6F 6A 65
       63 74 20 31 20 6F
       66 20 5A 57 52 20
       20 20 20 7C 0D 0A
 0320  20 20 20 7C 20 20					DB '   |                      	       |', 0DH, 0AH
       20 20 20 20 20 20
       20 20 20 20 20 20
       20 20 20 20 20 20
       20 20 09 20 20 20
       20 20 20 20 7C 0D
       0A
 0345  20 20 20 7C 20 20					DB '   |                    	       |', 0DH, 0AH
       20 20 20 20 20 20
       20 20 20 20 20 20
       20 20 20 20 20 20
       09 20 20 20 20 20
       20 20 7C 0D 0A
 0368  20 20 20 2B 2D 2D					DB '   +-----------------------------------+', 0DH, 0AH
       2D 2D 2D 2D 2D 2D
       2D 2D 2D 2D 2D 2D
       2D 2D 2D 2D 2D 2D
       2D 2D 2D 2D 2D 2D
       2D 2D 2D 2D 2D 2D
       2D 2D 2D 2B 0D 0A
 0392  20 20 20 20 20 20					DB '            | | |         ', 0DH, 0AH
       20 20 20 20 20 20
       7C 20 7C 20 7C 20
       20 20 20 20 20 20
       20 20 0D 0A
 03AE  20 20 20 20 20 20					DB '            | | | ____________       ', 0DH, 0AH
       20 20 20 20 20 20
       7C 20 7C 20 7C 20
       5F 5F 5F 5F 5F 5F
       5F 5F 5F 5F 5F 5F
       20 20 20 20 20 20
       20 0D 0A
 03D5  20 20 20 20 20 20					DB '            | | |/            \  ', 0DH, 0AH
       20 20 20 20 20 20
       7C 20 7C 20 7C 2F
       20 20 20 20 20 20
       20 20 20 20 20 20
       5C 20 20 0D 0A
 03F8  20 20 20 20 20 20					DB '      +-------------------+    \     ', 0DH, 0AH
       2B 2D 2D 2D 2D 2D
       2D 2D 2D 2D 2D 2D
       2D 2D 2D 2D 2D 2D
       2D 2D 2B 20 20 20
       20 5C 20 20 20 20
       20 0D 0A
 041F  20 20 20 20 20 2F					DB '     / ................../    /|\   ', 0DH, 0AH
       20 2E 2E 2E 2E 2E
       2E 2E 2E 2E 2E 2E
       2E 2E 2E 2E 2E 2E
       2E 2F 20 20 20 20
       2F 7C 5C 20 20 20
       0D 0A
 0445  20 20 20 20 2F 2E					DB '    /.....===.........../     \_/ ', 0DH, 0AH
       2E 2E 2E 2E 3D 3D
       3D 2E 2E 2E 2E 2E
       2E 2E 2E 2E 2E 2E
       2F 20 20 20 20 20
       5C 5F 2F 20 0D 0A
 0469  20 20 20 2B 2D 2D					DB '   +-------------------+         ', 0DH, 0AH
       2D 2D 2D 2D 2D 2D
       2D 2D 2D 2D 2D 2D
       2D 2D 2D 2D 2D 2B
       20 20 20 20 20 20
       20 20 20 0D 0A
 048C  24							DB '$'

 048D 7A 77 72				_USERNAME  	DB 		'zwr'
 0490 63 73 75				_PASSWORD  	DB 		'csu'
 0493 = 0006				_ULEN  		EQU 	$-_USERNAME         ; 用户名长度
 0493 = 0003				_PLEN  		EQU 	$-_PASSWORD       	; 密码长度
					
 0493 0F				USERNAME  	DB		15   				; 输入的用户名
 0494  000F [				PASSWORD  	DB 		15 DUP(?)          	; 输入的密码
        00
       ]
 04A3 00				PLEN  		DB 		0                  	; 输入密码的长度
 04A4				DATAS ENDS


				SHOWBM MACRO b
				     LEA DX,b
				     MOV AH,9
				     INT 21H
				ENDM
				 
				ADDRESS MACRO A,B
				     LEA SI,A
				     LEA BP,DS:B
				ENDM

				empty MACRO X,N
				      lea bx,X
				      MOV AL,20H;空格的ASCII码是20H
				      MOV CX,N
				  del:mov [bx],al
				      inc bx
				      loop del
				      ENDM

 0000				stack segment stack
 0000  0384 [			      db 900 dup(?)
        00
       ]
 0384				stack ends

 0000				CODES SEGMENT
				    ASSUME CS:CODES,ss:stack,DS:DATAS
 0000				START:

					
 0000  B8 ---- R		     mov ax, DATAS
 0003  8E D8			     mov ds, ax
 0005  B8 ---- R		     mov ax, stack
 0008  8E D0			     mov ss, ax
 000A  BC 00C8			     mov sp, 200
 000D  8D 16 0116 R		    LEA DX,infor1
 0011  B4 09			   	MOV AH,09H
 0013  CD 21			   	INT 21H

				     address mus_freg, mus_time
 0015  8D 36 0148 R	     1	     LEA SI,mus_freg
 0019  8D 2E 01BE R	     1	     LEA BP,DS:mus_time
 001D  E8 0043			     call music

				 
 0020				exit:     
 0020  EB 5A			     jmp START1
				;------------发声-------------
 0022				gensound proc near
 0022  50			     push ax
 0023  53			     push bx
 0024  51			     push cx
 0025  52			     push dx
 0026  57			     push di
				 
 0027  B0 B6			     mov al, 0b6H
 0029  E6 43			     out 43h, al
 002B  BA 0012			     mov dx, 12h
 002E  B8 348C			     mov ax, 348ch
 0031  F7 F7			     div di
 0033  E6 42			     out 42h, al
				 
 0035  8A C4			     mov al, ah
 0037  E6 42			     out 42h, al
				 
 0039  E4 61			     in al, 61h
 003B  8A E0			     mov ah, al
 003D  0C 03			     or al, 3
 003F  E6 61			     out 61h, al
 0041				wait1:
 0041  B9 0CF2			     mov cx, 3314
 0044  E8 000D			     call waitf
 0047				delay1:
 0047  4B			     dec bx
 0048  75 F7			     jnz wait1
				 
 004A  8A C4			     mov al, ah
 004C  E6 61			     out 61h, al
				 
 004E  5F			     pop di
 004F  5A			     pop dx
 0050  59			     pop cx
 0051  5B			     pop bx
 0052  58			     pop ax
 0053  C3			     ret 
 0054				gensound endp
				 
				;--------------------------
 0054				waitf proc near
 0054  50			      push ax
 0055				waitf1:
 0055  E4 61			      in al,61h
 0057  24 10			      and al,10h
 0059  38 E0			      cmp al,ah
 005B  74 F8			      je waitf1
 005D  8A E0			      mov ah,al
 005F  E2 F4			      loop waitf1
 0061  58			      pop ax
 0062  C3			      ret
 0063				waitf endp
				;--------------发声调用函数----------------
 0063				music proc near
 0063  33 C0			      xor ax, ax
 0065				freg:
 0065  8B 3C			      mov di, [si]
 0067  83 FF FF			      cmp di, 0FFFFH
 006A  74 0F			      je end_mus
 006C  3E: 8B 5E 00		      mov bx, ds:[bp]
 0070  E8 FFAF			      call gensound
 0073  83 C6 02			      add si, 2
 0076  83 C5 02			      add bp, 2
 0079  EB EA			      jmp freg
 007B				end_mus:
 007B  C3			      ret
 007C				music endp

 007C				START1:
 007C  B2 0D				MOV DL,0DH
 007E  B4 02			    MOV AH,2H
 0080  CD 21			    INT 21h
 0082  B2 0A			    MOV DL,0AH
 0084  B4 02			    MOV AH,2H
 0086  CD 21			    INT 21h
				    
 0088  B8 0000			 	MOV AX,0
 008B  BB 0000				MOV BX,0
 008E  B9 0000				MOV CX,0
 0091  BA 0000				MOV DX,0
 0094  B8 ---- R		    MOV AX,DATAS
 0097  8E D8			    MOV DS,AX
 0099  B8 ---- R		    MOV AX,STACK
 009C  8E D0			    MOV SS,AX
 009E  BC 0010			    MOV SP,16
 00A1				NEXT0:  
 00A1  B8 0000					MOV AX,0
 00A4  BB 0000					MOV BX,0
 00A7  B9 0000					MOV CX,0
 00AA  BA 0000					MOV DX,0
 00AD  B8 ---- R			MOV AX,DATAS
 00B0  8E D8			    MOV DS,AX
 00B2  B8 ---- R		    MOV AX,STACK
 00B5  8E D0			    MOV SS,AX
 00B7  BC 0010			    MOV SP,16
 00BA  B4 09					MOV 	AH, 	9    			;09H功能号，显示DS：DL内字符串
 00BC  BA 0232 R		      	MOV 	DX, 	OFFSET MESG1
 00BF  CD 21			      	INT 	21H
 00C1  B4 0A			      	MOV 	AH, 	0AH   			;键盘输入字符串并显示，存在U缓冲区
 00C3  BA 0493 R				MOV 	DX, 	OFFSET USERNAME  		;用户输入字符串起始偏移位置放入DX缓冲区
 00C6  CD 21			      	INT 	21H
 00C8  B4 02			      	MOV 	AH, 	2
 00CA  B2 0A			      	MOV 	DL, 	0AH            	;换行字符
 00CC  CD 21			      	INT 	21H
 00CE  B4 09			      	MOV 	AH, 	9             	;显示提示字符串
 00D0  BA 0248 R		      	MOV 	DX, 	OFFSET MESG2
 00D3  CD 21			      	INT 	21H
 00D5  B9 0003			      	MOV 	CX, 	_PLEN
 00D8  BE 0494 R		      	MOV 	SI, 	OFFSET PASSWORD  	;把输入密码起始偏移地址放入SI
 00DB  B4 07			NEXT1:  MOV 	AH, 	07H         	;无回显从键盘读入一个字符
 00DD  CD 21			      	INT 	21H
 00DF  3C 0D			      	CMP 	AL, 	0DH          	;判断输入是否结束
 00E1  74 0F			      	JE 	IND
 00E3  88 04			      	MOV 	[SI], 	AL       		;将输入密码字符放入数据区：PWD
 00E5  B4 02			      	MOV 	AH, 2          			;每输入一位密码显示一个‘*’
 00E7  B2 2A			      	MOV 	DL, '*'
 00E9  CD 21			      	INT 	21H
 00EB  FE 06 04A3 R		      	INC 	PLEN
 00EF  46			      	INC 	SI
 00F0  EB E9			      	JMP 	NEXT1
 00F2  B4 02			IND:  	MOV 	AH, 	2             	;输出换行
 00F4  B2 0A			      	MOV 	DL, 	0AH
 00F6  CD 21			      	INT 	21H
 00F8  BB 0494 R		     	MOV 	BX, 	OFFSET USERNAME+1    	;[BX]=实际输入字符数
 00FB  8A 07			      	MOV 	AL, 	[BX]
 00FD  3C 06			      	CMP 	AL, 	_ULEN          	;比较用户名长度    
 00FF  BB 048D R		      	MOV   BX, 	OFFSET _USERNAME
 0102  BE 048F R		      	MOV 	SI, 	OFFSET _USERNAME+2
 0105  B9 0006			      	MOV 	CX, 	_ULEN          	;设置循环次数
 0108  8A 07			NEXT2:  MOV 	AL, 	[BX]
 010A  38 04			      	CMP 	[SI], 	AL          	;循环比较用户名是否正确
 010C  46			      	INC   	SI
 010D  43			      	INC 	BX
 010E  E2 F8			      	LOOP 	NEXT2
 0110  BB 0490 R		      	MOV 	BX, 	OFFSET _PASSWORD
 0113  BE 0494 R		      	MOV 	SI, 	OFFSET PASSWORD
 0116  8A 0E 04A3 R		      	MOV 	CL, 	PLEN
 011A  B5 00			      	MOV 	CH, 	0
 011C  81 F9 0003		      	CMP 	CX, 	_PLEN          	;比较密码长度
 0120  75 0F			      	JNZ 	ERR
 0122  B9 0003			      	MOV 	CX, 	_PLEN
 0125  8A 07			NEXT3:  MOV 	AL, 	[BX]
 0127  38 04			      	CMP 	[SI], 	AL          	;循环比较密码字符是否正确
 0129  75 06			      	JNZ 	ERR
 012B  46			      	INC 	SI
 012C  43			      	INC 	BX
 012D  E2 F6			      	LOOP 	NEXT3
 012F  EB 10			      	JMP 	WEL
 0131  B4 09			ERR:  	MOV 	AH, 	9
 0133  BA 025E R		      	MOV 	DX, 	OFFSET ERROR 	;输出用户名或密码错误提示
 0136  CD 21			      	INT 	21H
 0138  B4 02			      	MOV 	AH, 	2
 013A  B2 0A			      	MOV 	DL, 	0AH
 013C  CD 21					INT 	21H
 013E  E9 FF60			      	JMP 	NEXT0
 0141  B4 09			WEL:  	MOV 	AH, 	9             	;输出登录成功的提示
 0143  BA 0283 R		      	MOV 	DX, 	OFFSET WELCOME
 0146  CD 21			      	INT 	21H

 0148  B4 07				MOV AH,07H
 014A  CD 21				INT 21H
					
 014C  B8 0003				MOV AX,3
 014F  CD 10				INT 10H
					
 0151  B8 0000			 	MOV AX,0
 0154  BB 0000				MOV BX,0
 0157  B9 0000				MOV CX,0
 015A  BA 0000				MOV DX,0
 015D  B8 ---- R		    MOV AX,DATAS
 0160  8E D8			    MOV DS,AX
 0162  B4 00			  	mov ah,0  
				  	  	
				   	
 0164				ASK:    
 0164  8D 16 0065 R			LEA DX,ASK_1
 0168  B4 09			   	MOV AH,09H
 016A  CD 21			   	INT 21H
				    
 016C  8D 16 0097 R		INPUT:    LEA DX,ASK_2
 0170  B4 09			   	MOV AH,09H
 0172  CD 21			   	INT 21H
				   	
 0174  B4 01			   	MOV AH,01H      ;键盘输入并显示，字符存于AL中
 0176  CD 21			   	INT 21H
				   	   	
 0178  3C 59			   	CMP AL,'Y'      ;比较刚输入的字符与Y字符，相等跳转到BEGIN_1中
 017A  74 11			   	JE BEGIN_1
				   	
 017C  3C 4E			   	CMP AL,'N'      ;比较刚输入的字符与N字符，相等跳转到END_0中，不等则跳转到ASK重输入
 017E  75 03 E9 017E		   	JE END_0
					
					
 0183  8D 16 00E9 R		WRONG:	LEA DX,ANS
 0187  B4 09			   	MOV AH,09H
 0189  CD 21			   	INT 21H
 018B  EB DF			   	JMP INPUT
				   	
 018D				BEGIN_1:
 018D  B2 0D				mov dl,0DH ;打印换行
 018F  B4 02			    mov ah,2H
 0191  CD 21			    int 21H
 0193  B2 0A			    MOV DL,0AH
 0195  B4 02			    MOV AH,2h
 0197  CD 21			    INT 21H
				    
 0199  8D 3E 0048 R		    LEA DI,ARRAY
 019D  B9 001A			    MOV cx,26
 01A0				Initial: ;初始化清零
 01A0  B8 0000				MOV AX,0
 01A3  89 05			    MOV [DI],AX
 01A5  47			    INC DI
 01A6  E2 F8			    LOOP Initial
				    
				    
				    
 01A8  B8 0000				MOV AX,0
 01AB  BB 0000				MOV BX,0
 01AE  B9 0000				MOV CX,0
 01B1  BA 0000				MOV DX,0
 01B4  C6 06 0062 R 00			MOV OTHERS,0
 01B9  B8 ---- R		    MOV AX,DATAS
 01BC  8E D8			    MOV DS,AX
 01BE  B8 3D00			    MOV AX,3D00H ;读打开指定文件
 01C1  CD 21			    INT 21H
 01C3  B4 00			    MOV ah,0
 01C5  73 08			    JNC OPEN ; OPEN SUCCESSFULLY
 01C7  BE 0009 R		    MOV SI, OFFSET ERROR1
 01CA  E8 006A			    CALL DMESS
 01CD  EB 25			    JMP OVER

				; JUMP SUCCESSFULLY
 01CF				OPEN:
 01CF  8B D8				MOV BX,AX; 保存文件句柄
 01D1  E8 004B			GO: CALL READ_CHAR ;从文件读一个字符
 01D4  72 0B				JC READ_ERROR
 01D6  3A 06 0064 R			CMP AL,EOF ; IS OVER?
 01DA  74 0B				JZ TYPE_OK
 01DC  E8 0066				CALL PUNCH; 记录每个字符个数
 01DF  EB F0				JMP GO; 循环读取
					
 01E1				READ_ERROR:
 01E1  BE 0019 R			MOV SI,OFFSET ERROR2
 01E4  E8 0050				CALL DMESS

 01E7				TYPE_OK:
 01E7  B4 3E				MOV AH,3EH
 01E9  CD 21				INT 21H ; 关闭文件
 01EB  B2 0A				MOV DL,0AH
 01ED  B4 02				MOV AH,02H
 01EF  CD 21				INT 21H
 01F1  E8 00A4				CALL SHOW

 01F4				OVER:

 01F4  B4 07				MOV AH,07H
 01F6  CD 21				INT 21H
					

 01F8  8D 16 0036 R			LEA DX,STRING3
 01FC  B4 09				MOV AH,09H
 01FE  CD 21				INT 21H
 0200  33 C0				XOR AX,AX
 0202  A0 0062 R			MOV AL,OTHERS ;将统计的数字送回给AX
 0205  E8 00DA				CALL DISPLAY
 0208  E8 00BE				CALL ENDLINE
					
 020B  B4 07				MOV AH,07H
 020D  CD 21				INT 21H
					
 020F  B8 0003				MOV AX,3
 0212  CD 10				INT 10H
					
 0214  8D 16 00AB R			LEA DX,ASK_3
 0218  B4 09			   	MOV AH,09H
 021A  CD 21			   	INT 21H
				   	
 021C  E9 FF4D			   	JMP INPUT
					
					
 021F				READ_CHAR PROC
 021F  B9 0001				MOV CX,1 ;设置单次读取的字符数为1
 0222  BA 0063 R			MOV DX,OFFSET BUFFER
 0225  B4 3F				MOV AH,3FH; 读取文件
 0227  CD 21				INT 21H
 0229  72 0B				JC R1 ;读出错
 022B  3B C1				CMP AX,CX ;判断文件是否读取完毕
 022D  A0 0064 R			MOV AL,EOF
 0230  72 03				JB R2
 0232  A0 0063 R			MOV AL,BUFFER
 0235  F8			R2:CLC
 0236  C3			R1:RET ;字节出栈
 0237				READ_CHAR ENDP
					
 0237				DMESS PROC
 0237				DMESS1:
 0237  8A 14				MOV DL,[SI]
 0239  46				INC SI
 023A  0A D2				OR DL,DL
 023C  74 06				JZ DMESS2
 023E  B4 02				MOV AH,02H
 0240  CD 21				INT 21H ;显示一个字符
 0242  EB F3				JMP DMESS1
 0244  C3			DMESS2:RET
 0245				DMESS ENDP

 0245				PUNCH PROC
 0245  52				PUSH DX
 0246  8A D0				MOV DL,AL
 0248  B4 02				MOV AH,02H
 024A  CD 21				INT 21H
 024C  5A				POP DX
 024D  B1 41				MOV CL,41H
 024F  8D 3E 0048 R			LEA DI,ARRAY
 0253  8A E8				MOV CH,AL
 0255  38 CD				CMP CH,CL
 0257  72 3A				JB OTHER ;当字符小于41H（A），其余字符数目加一
 0259  80 FD 5A				CMP CH,5AH
 025C  77 0D				JA HIGHER2; 当字符大于5AH(Z),继续比较
 025E  38 CD			H1:CMP CH,CL
 0260  74 27				JE CHAR ; 对应字母个数++
 0262  77 00				JA LOOP1
 0264				LOOP1:
 0264  FE C1				INC CL
 0266  83 C7 01				ADD DI,1
 0269  EB F3				JMP H1
					
 026B				HIGHER2:
 026B  B1 61				MOV CL,61H ;
 026D  8D 3E 0048 R			LEA DI,ARRAY
 0271  8A E8				MOV CH,AL
 0273  38 CD				CMP CH,CL
 0275  72 1C				JB OTHER ;当字符小于61H，其余字符数目加一
 0277  80 FD 7A				CMP CH,7AH
 027A  77 17				JA OTHER ;当字符大于7AH，其余字符加一
 027C  38 CD			H2: CMP CH,CL
 027E  74 09				JE CHAR ; 对应字母个数加一
 0280  77 00				JA LOOP2
					
 0282				LOOP2:
 0282  FE C1				INC CL
 0284  83 C7 01				ADD DI,1
 0287  EB F3				JMP H2
					
 0289				CHAR:
 0289  32 ED				XOR CH,CH
 028B  8A 2D				MOV CH,[DI]
					
 028D  FE C5				INC CH
 028F  88 2D				MOV [DI],CH
 0291  EB 04				JMP TG
 0293				OTHER:
 0293  FE 06 0062 R			INC OTHERS
				; 比较结束
 0297  C3			TG:	RET
 0298					PUNCH ENDP
					
 0298				SHOW PROC
 0298  8D 36 0048 R			LEA SI,ARRAY
 029C  BF 0041				MOV DI,41H
 029F				LOOP3:
 029F  8D 16 0028 R			LEA DX,STRING1
 02A3  B4 09				MOV AH,09H
 02A5  CD 21				INT 21H
 02A7  8B D7				MOV DX,DI
 02A9  B4 02				MOV AH,02H
 02AB  CD 21				INT 21H
 02AD  8D 16 0033 R			LEA DX,STRING2
 02B1  B4 09				MOV AH,09H
 02B3  CD 21				INT 21H
 02B5  33 C0				XOR AX,AX
 02B7  8A 04				MOV AL,[SI] ;将统计的数字送回给AX
 02B9  83 C6 01				ADD SI,1
 02BC  E8 0023				CALL DISPLAY
 02BF  E8 0007				CALL ENDLINE
 02C2  47				INC DI
 02C3  83 FF 5B				CMP DI,5BH ;判断DI是否是字母
 02C6  72 D7				JB LOOP3

 02C8  C3				RET
 02C9					SHOW ENDP
					
 02C9				ENDLINE PROC NEAR
 02C9  B2 20				MOV DL,20H
 02CB  B4 02				MOV AH,02H
 02CD  CD 21				INT 21H

 02CF  B2 20				MOV DL,20H
 02D1  B4 02				MOV AH,02H
 02D3  CD 21				INT 21H
 02D5  B2 20				MOV DL,20H
 02D7  B4 02				MOV AH,02H
					
 02D9  CD 21				INT 21H
 02DB  B2 20				MOV DL,20H
 02DD  B4 02				MOV AH,02H
 02DF  CD 21				INT 21H
 02E1  C3				RET
 02E2					ENDLINE ENDP
					
 02E2				DISPLAY PROC NEAR
 02E2  B3 0A				MOV BL,10
 02E4  F6 F3				DIV BL ;以十进制数方式输出
 02E6  50				PUSH AX
					; 输出十位数
 02E7  8A D0				MOV DL,AL
 02E9  80 C2 30				ADD DL,30H
 02EC  B4 02				MOV AH,02H
 02EE  CD 21				INT 21H
 02F0  58				POP AX
					;输出个位数
 02F1  8A D4				MOV DL,AH
 02F3  80 C2 30				ADD DL,30H
 02F6  B4 02				MOV AH,02H
 02F8  CD 21				INT 21H
 02FA  B2 20				MOV DL,20H
 02FC  B4 02				MOV AH,02H
 02FE  CD 21				INT 21H
 0300  C3				RET
 0301					DISPLAY ENDP
					

 0301				END_0:
 0301  B8 4C00				mov ax,4c00h
 0304  CD 21				int 21h
					
 0306				CODES ENDS
				    END START

Microsoft (R) Macro Assembler Version 6.11		    05/19/23 16:25:47
tempfile.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

ADDRESS  . . . . . . . . . . . .	Proc
SHOWBM . . . . . . . . . . . . .	Proc
empty  . . . . . . . . . . . . .	Proc


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

CODES  . . . . . . . . . . . . .	16 Bit	 0306	  Para	  Private 
DATAS  . . . . . . . . . . . . .	16 Bit	 04A4	  Para	  Private 
stack  . . . . . . . . . . . . .	16 Bit	 0384	  Para	  Stack	  


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

DISPLAY  . . . . . . . . . . . .	P Near	 02E2	  CODES	Length= 001F Public
DMESS  . . . . . . . . . . . . .	P Near	 0237	  CODES	Length= 000E Public
  DMESS1 . . . . . . . . . . . .	L Near	 0237	  CODES	
  DMESS2 . . . . . . . . . . . .	L Near	 0244	  CODES	
ENDLINE  . . . . . . . . . . . .	P Near	 02C9	  CODES	Length= 0019 Public
PUNCH  . . . . . . . . . . . . .	P Near	 0245	  CODES	Length= 0053 Public
  H1 . . . . . . . . . . . . . .	L Near	 025E	  CODES	
  LOOP1  . . . . . . . . . . . .	L Near	 0264	  CODES	
  HIGHER2  . . . . . . . . . . .	L Near	 026B	  CODES	
  H2 . . . . . . . . . . . . . .	L Near	 027C	  CODES	
  LOOP2  . . . . . . . . . . . .	L Near	 0282	  CODES	
  CHAR . . . . . . . . . . . . .	L Near	 0289	  CODES	
  OTHER  . . . . . . . . . . . .	L Near	 0293	  CODES	
  TG . . . . . . . . . . . . . .	L Near	 0297	  CODES	
READ_CHAR  . . . . . . . . . . .	P Near	 021F	  CODES	Length= 0018 Public
  R2 . . . . . . . . . . . . . .	L Near	 0235	  CODES	
  R1 . . . . . . . . . . . . . .	L Near	 0236	  CODES	
SHOW . . . . . . . . . . . . . .	P Near	 0298	  CODES	Length= 0031 Public
  LOOP3  . . . . . . . . . . . .	L Near	 029F	  CODES	
gensound . . . . . . . . . . . .	P Near	 0022	  CODES	Length= 0032 Public
  wait1  . . . . . . . . . . . .	L Near	 0041	  CODES	
  delay1 . . . . . . . . . . . .	L Near	 0047	  CODES	
music  . . . . . . . . . . . . .	P Near	 0063	  CODES	Length= 0019 Public
  freg . . . . . . . . . . . . .	L Near	 0065	  CODES	
  end_mus  . . . . . . . . . . .	L Near	 007B	  CODES	
waitf  . . . . . . . . . . . . .	P Near	 0054	  CODES	Length= 000F Public
  waitf1 . . . . . . . . . . . .	L Near	 0055	  CODES	


Symbols:

                N a m e                 Type     Value    Attr

ANS  . . . . . . . . . . . . . .	Byte	 00E9	  DATAS	
ARRAY  . . . . . . . . . . . . .	Byte	 0048	  DATAS	
ASK_1  . . . . . . . . . . . . .	Byte	 0065	  DATAS	
ASK_2  . . . . . . . . . . . . .	Byte	 0097	  DATAS	
ASK_3  . . . . . . . . . . . . .	Byte	 00AB	  DATAS	
ASK  . . . . . . . . . . . . . .	L Near	 0164	  CODES	
BEGIN_1  . . . . . . . . . . . .	L Near	 018D	  CODES	
BUFFER . . . . . . . . . . . . .	Byte	 0063	  DATAS	
END_0  . . . . . . . . . . . . .	L Near	 0301	  CODES	
EOF  . . . . . . . . . . . . . .	Byte	 0064	  DATAS	
ERROR1 . . . . . . . . . . . . .	Byte	 0009	  DATAS	
ERROR2 . . . . . . . . . . . . .	Byte	 0019	  DATAS	
ERROR  . . . . . . . . . . . . .	Byte	 025E	  DATAS	
ERR  . . . . . . . . . . . . . .	L Near	 0131	  CODES	
FNAME  . . . . . . . . . . . . .	Byte	 0000	  DATAS	
GO . . . . . . . . . . . . . . .	L Near	 01D1	  CODES	
IND  . . . . . . . . . . . . . .	L Near	 00F2	  CODES	
INPUT  . . . . . . . . . . . . .	L Near	 016C	  CODES	
Initial  . . . . . . . . . . . .	L Near	 01A0	  CODES	
MESG1  . . . . . . . . . . . . .	Byte	 0232	  DATAS	
MESG2  . . . . . . . . . . . . .	Byte	 0248	  DATAS	
NEXT0  . . . . . . . . . . . . .	L Near	 00A1	  CODES	
NEXT1  . . . . . . . . . . . . .	L Near	 00DB	  CODES	
NEXT2  . . . . . . . . . . . . .	L Near	 0108	  CODES	
NEXT3  . . . . . . . . . . . . .	L Near	 0125	  CODES	
OPEN . . . . . . . . . . . . . .	L Near	 01CF	  CODES	
OTHERS . . . . . . . . . . . . .	Byte	 0062	  DATAS	
OVER . . . . . . . . . . . . . .	L Near	 01F4	  CODES	
PASSWORD . . . . . . . . . . . .	Byte	 0494	  DATAS	
PLEN . . . . . . . . . . . . . .	Byte	 04A3	  DATAS	
READ_ERROR . . . . . . . . . . .	L Near	 01E1	  CODES	
START1 . . . . . . . . . . . . .	L Near	 007C	  CODES	
START  . . . . . . . . . . . . .	L Near	 0000	  CODES	
STRING1  . . . . . . . . . . . .	Byte	 0028	  DATAS	
STRING2  . . . . . . . . . . . .	Byte	 0033	  DATAS	
STRING3  . . . . . . . . . . . .	Byte	 0036	  DATAS	
TYPE_OK  . . . . . . . . . . . .	L Near	 01E7	  CODES	
USERNAME . . . . . . . . . . . .	Byte	 0493	  DATAS	
WELCOME  . . . . . . . . . . . .	Byte	 0283	  DATAS	
WEL  . . . . . . . . . . . . . .	L Near	 0141	  CODES	
WRONG  . . . . . . . . . . . . .	L Near	 0183	  CODES	
_PASSWORD  . . . . . . . . . . .	Byte	 0490	  DATAS	
_PLEN  . . . . . . . . . . . . .	Number	 0003h	 
_ULEN  . . . . . . . . . . . . .	Number	 0006h	 
_USERNAME  . . . . . . . . . . .	Byte	 048D	  DATAS	
exit . . . . . . . . . . . . . .	L Near	 0020	  CODES	
infor1 . . . . . . . . . . . . .	Byte	 0116	  DATAS	
mus_freg . . . . . . . . . . . .	Word	 0148	  DATAS	
mus_time . . . . . . . . . . . .	Word	 01BE	  DATAS	

	   0 Warnings
	   0 Errors

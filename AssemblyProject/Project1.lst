Microsoft (R) Macro Assembler Version 6.11		    08/28/23 21:10:03
tempfile.asm						     Page 1 - 1


 0000				DATAS SEGMENT
 0000 46 69 6C 65 31 2E		   FNAME1 DB 'File1.txt',0
       74 78 74 00
 000A 46 69 6C 65 32 2E		   FNAME2 DB 'File2.txt',0
       74 78 74 00
 0014 46 69 6C 65 33 2E		   FNAME3 DB 'File3.txt',0
       74 78 74 00
 001E 46 69 6C 65 20 6E		   ERROR1 DB 'File not found' , 07H, 0
       6F 74 20 66 6F 75
       6E 64 07 00
 002E 52 65 61 64 69 6E		   ERROR2 DB 'Reading error' , 07H, 0
       67 20 65 72 72 6F
       72 07 00
 003D 4E 75 6D 62 65 72			STRING1 DB  'Number of $' ;各类字符提示信息
       20 6F 66 20 24
 0048 3A 20 24				STRING2 DB ': $'
 004B 4E 75 6D 62 65 72			STRING3 DB 'Number of Others $'
       20 6F 66 20 4F 74
       68 65 72 73 20 24
 005D  001A [				ARRAY DB 26 DUP(0);字母个数数组
        00
       ]
 0077 00				OTHERS DB 0
 0078 00				BUFFER DB ?;数据缓冲区
 0079 32				EOF DB 032H
 007A 0D 0A 44 6F 20 79			ASK_1 DB 13,10,'Do you want to calculate the number of letters?','$'
       6F 75 20 77 61 6E
       74 20 74 6F 20 63
       61 6C 63 75 6C 61
       74 65 20 74 68 65
       20 6E 75 6D 62 65
       72 20 6F 66 20 6C
       65 74 74 65 72 73
       3F 24
 00AC 0D 0A 50 6C 65 61			ASK_2 DB 13,10,'Please input Y/N:','$'
       73 65 20 69 6E 70
       75 74 20 59 2F 4E
       3A 24
 00C0 0D 0A 44 6F 20 79			ASK_3 DB 13,10,'Do you want to continue to calculate the number of letters?','$'
       6F 75 20 77 61 6E
       74 20 74 6F 20 63
       6F 6E 74 69 6E 75
       65 20 74 6F 20 63
       61 6C 63 75 6C 61
       74 65 20 74 68 65
       20 6E 75 6D 62 65
       72 20 6F 66 20 6C
       65 74 74 65 72 73
       3F 24
 00FE 0D 0A 54 68 65 20			ANS DB 13,10,'The character is wrong, please input again','$'
       63 68 61 72 61 63
       74 65 72 20 69 73
       20 77 72 6F 6E 67
       2C 20 70 6C 65 61
       73 65 20 69 6E 70
       75 74 20 61 67 61
       69 6E 24

 012B 20 20 20 20 20 20			 infor1 db  "                welocom you to come here listeng!", '$'
       20 20 20 20 20 20
       20 20 20 20 77 65
       6C 6F 63 6F 6D 20
       79 6F 75 20 74 6F
       20 63 6F 6D 65 20
       68 65 72 65 20 6C
       69 73 74 65 6E 67
       21 24
					
 015D 00C4 0106				 mus_freg dw 196,262 ;音乐频率
 0161  0106 0126 014A				  dw 262,294,330
 0167  0188 014A 014A				  dw 392,330,330
 016D  014A 00C4				  dw 330,196
 0171  0106					  dw 262
 0173  0126 0106 00DC				  dw 294,262,220
 0179  00C4 00C4				  dw 196,196
 017D  0106 0106 0126				  dw 262,262,294,330
       014A
 0185  01B8 014A 0188				  dw 440,330,392
 018B  014A 0126				  dw 330,294
 018F  0106					  dw 262
 0191  0126 0188				  dw 294,392
 0195  014A 0126				  dw 330,294
 0199  014A 0188				  dw 330,392
 019D  0188 014A 0188				  dw 392,330,392
 01A3  01B8 020C 01B8				  dw 440,524,440
 01A9  014A 0126 0106				  dw 330,294,262
 01AF  0126 014A 014A				  dw 294,330,330
 01B5  00C4 0188				  dw 196,392
 01B9  014A 014A				  dw 330,330
 01BD  0126 0106 0106				  dw 294,262,262
 01C3  00C4 0126 0106				  dw 196,294,262
 01C9  014A 0126 0106				  dw 330,294,262
 01CF  0106					  dw 262
 01D1  FFFF					  dw -1
 01D3 0019 004B				 mus_time  dw 25,75  ;音乐时间
 01D7  0032 000C 000C				  dw 50,12,12
 01DD  0019 0019 0019				  dw 25,25,25
 01E3  0019 0032				  dw 25,50
 01E7  004B					  dw 75
 01E9  0019 0019 0019				  dw 25,25,25
 01EF  007D 0019				  dw 125,25
 01F3  004B 0032 000C				  dw 75,50,12,12
       000C
 01FB  0019 0019 0032				  dw 25,25,50
 0201  0019 0019				  dw 25,25
 0205  004B					  dw 75
 0207  0032 0019				  dw 50,25
 020B  0019 0064				  dw 25,100
 020F  0019 004B				  dw 25,75
 0213  0019 0019 0019				  dw 25,25,25
 0219  0019 0019 004B				  dw 25,25,75
 021F  0019 0032 0019				  dw 25,50,25
 0225  0032 0019 007D				  dw 50,25,125
 022B  0019 0064				  dw 25,100
 022F  0019 0019				  dw 25,25
 0233  0019 0019 004B				  dw 25,25,75
 0239  0019 0032 0019				  dw 25,50,25
 023F  0032 000C 000C				  dw 50,12,12
 0245  00C8					  dw 200

 0247 49 4E 50 55 54 20			MESG1 		DB 		'INPUT YOUR USERNAME: $'		;提示字符
       59 4F 55 52 20 55
       53 45 52 4E 41 4D
       45 3A 20 24
 025D 49 4E 50 55 54 20			MESG2  		DB 		'INPUT YOUR PASSWORD: $' 
       59 4F 55 52 20 50
       41 53 53 57 4F 52
       44 3A 20 24
 0273 2D 2D 2D 2D 2D 55			ERROR  		DB 	'-----USERNAME OR PASSWORD ERROR!----$'
       53 45 52 4E 41 4D
       45 20 4F 52 20 50
       41 53 53 57 4F 52
       44 20 45 52 52 4F
       52 21 2D 2D 2D 2D
       24
 0298 0D 0A 20 20 20 2B			WELCOME 	DB  0DH, 0AH, '   +-----------------------------------+', 0DH, 0AH
       2D 2D 2D 2D 2D 2D
       2D 2D 2D 2D 2D 2D
       2D 2D 2D 2D 2D 2D
       2D 2D 2D 2D 2D 2D
       2D 2D 2D 2D 2D 2D
       2D 2D 2D 2D 2D 2B
       0D 0A
 02C4  20 20 20 7C 20 20					DB '   |                    	       |', 0DH, 0AH
       20 20 20 20 20 20
       20 20 20 20 20 20
       20 20 20 20 20 20
       09 20 20 20 20 20
       20 20 7C 0D 0A
 02E7  20 20 20 7C 20 20					DB '   |                     	       |', 0DH, 0AH			   
       20 20 20 20 20 20
       20 20 20 20 20 20
       20 20 20 20 20 20
       20 09 20 20 20 20
       20 20 20 7C 0D 0A
 030B  20 20 20 7C 20 20					DB '   |    Welcome to project 1 of ZWR    |', 0DH, 0AH
       20 20 57 65 6C 63
       6F 6D 65 20 74 6F
       20 70 72 6F 6A 65
       63 74 20 31 20 6F
       66 20 5A 57 52 20
       20 20 20 7C 0D 0A
 0335  20 20 20 7C 20 20					DB '   |                      	       |', 0DH, 0AH
       20 20 20 20 20 20
       20 20 20 20 20 20
       20 20 20 20 20 20
       20 20 09 20 20 20
       20 20 20 20 7C 0D
       0A
 035A  20 20 20 7C 20 20					DB '   |                    	       |', 0DH, 0AH
       20 20 20 20 20 20
       20 20 20 20 20 20
       20 20 20 20 20 20
       09 20 20 20 20 20
       20 20 7C 0D 0A
 037D  20 20 20 2B 2D 2D					DB '   +-----------------------------------+', 0DH, 0AH
       2D 2D 2D 2D 2D 2D
       2D 2D 2D 2D 2D 2D
       2D 2D 2D 2D 2D 2D
       2D 2D 2D 2D 2D 2D
       2D 2D 2D 2D 2D 2D
       2D 2D 2D 2B 0D 0A
 03A7  20 20 20 20 20 20					DB '            | | |         ', 0DH, 0AH
       20 20 20 20 20 20
       7C 20 7C 20 7C 20
       20 20 20 20 20 20
       20 20 0D 0A
 03C3  20 20 20 20 20 20					DB '            | | | ____________       ', 0DH, 0AH
       20 20 20 20 20 20
       7C 20 7C 20 7C 20
       5F 5F 5F 5F 5F 5F
       5F 5F 5F 5F 5F 5F
       20 20 20 20 20 20
       20 0D 0A
 03EA  20 20 20 20 20 20					DB '            | | |/            \  ', 0DH, 0AH
       20 20 20 20 20 20
       7C 20 7C 20 7C 2F
       20 20 20 20 20 20
       20 20 20 20 20 20
       5C 20 20 0D 0A
 040D  20 20 20 20 20 20					DB '      +-------------------+    \     ', 0DH, 0AH
       2B 2D 2D 2D 2D 2D
       2D 2D 2D 2D 2D 2D
       2D 2D 2D 2D 2D 2D
       2D 2D 2B 20 20 20
       20 5C 20 20 20 20
       20 0D 0A
 0434  20 20 20 20 20 2F					DB '     / ................../    /|\   ', 0DH, 0AH
       20 2E 2E 2E 2E 2E
       2E 2E 2E 2E 2E 2E
       2E 2E 2E 2E 2E 2E
       2E 2F 20 20 20 20
       2F 7C 5C 20 20 20
       0D 0A
 045A  20 20 20 20 2F 2E					DB '    /.....===.........../     \_/ ', 0DH, 0AH
       2E 2E 2E 2E 3D 3D
       3D 2E 2E 2E 2E 2E
       2E 2E 2E 2E 2E 2E
       2F 20 20 20 20 20
       5C 5F 2F 20 0D 0A
 047E  20 20 20 2B 2D 2D					DB '   +-------------------+         ', 0DH, 0AH
       2D 2D 2D 2D 2D 2D
       2D 2D 2D 2D 2D 2D
       2D 2D 2D 2D 2D 2B
       20 20 20 20 20 20
       20 20 20 0D 0A
 04A1  24							DB '$'

 04A2 7A 77 72				_USERNAME  	DB 		'zwr'
 04A5 63 73 75				_PASSWORD  	DB 		'csu'
 04A8 = 0006				_ULEN  		EQU 	$-_USERNAME         ; 用户名长度
 04A8 = 0003				_PLEN  		EQU 	$-_PASSWORD       	; 密码长度
					
 04A8 0F				USERNAME  	DB		15   				; 输入的用户名
 04A9  000F [				PASSWORD  	DB 		15 DUP(?)          	; 输入的密码
        00
       ]
 04B8 00				PLEN  		DB 		0                  	; 输入密码的长度
					
 04B9 0A 0D 0A 0D 20 20			menu  db 10,13,10,13,'           Which File do you want to select          '
       20 20 20 20 20 20
       20 20 20 57 68 69
       63 68 20 46 69 6C
       65 20 64 6F 20 79
       6F 75 20 77 61 6E
       74 20 74 6F 20 73
       65 6C 65 63 74 20
       20 20 20 20 20 20
       20 20 20
 04F2  0A 0D			      db 10,13
 04F4  0A 0D 20 20 20 20	      db 10,13,'           1. FILE1'
       20 20 20 20 20 20
       20 31 2E 20 46 49
       4C 45 31
 0509  0A 0D 20 20 20 20	      db 10,13,'           2. FILE2'
       20 20 20 20 20 20
       20 32 2E 20 46 49
       4C 45 32
 051E  0A 0D 20 20 20 20	      db 10,13,'           3. FILE3'
       20 20 20 20 20 20
       20 33 2E 20 46 49
       4C 45 33
 0533  0A 0D			      db 10,13
 0535  0A 0D 20 20 20 70	      db 10,13,'   please choose one of 1~3:','$'
       6C 65 61 73 65 20
       63 68 6F 6F 73 65
       20 6F 6E 65 20 6F
       66 20 31 7E 33 3A
       24

					
					
 0554				DATAS ENDS


				SHOWBM MACRO b
				     LEA DX,b
				     MOV AH,9
				     INT 21H
				ENDM
				 
				ADDRESS MACRO A,B
				     LEA SI,A
				     LEA BP,DS:B
				ENDM

				empty MACRO X,N
				      lea bx,X
				      MOV AL,20H;空格的ASCII码是20H
				      MOV CX,N
				  del:mov [bx],al
				      inc bx
				      loop del
				      ENDM

 0000				stack segment stack
 0000  0384 [			      db 900 dup(?)
        00
       ]
 0384				stack ends

 0000				CODES SEGMENT
				    ASSUME CS:CODES,ss:stack,DS:DATAS
 0000				START:

					
 0000  B8 ---- R		     mov ax, DATAS
 0003  8E D8			     mov ds, ax
 0005  B8 ---- R		     mov ax, stack
 0008  8E D0			     mov ss, ax
 000A  BC 00C8			     mov sp, 200
 000D  8D 16 012B R		    LEA DX,infor1
 0011  B4 09			   	MOV AH,09H
 0013  CD 21			   	INT 21H

				     address mus_freg, mus_time
 0015  8D 36 015D R	     1	     LEA SI,mus_freg
 0019  8D 2E 01D3 R	     1	     LEA BP,DS:mus_time
 001D  E8 0043			     call music

				 
 0020				exit:     
 0020  EB 5A			     jmp START1
				;------------发声-------------
 0022				gensound proc near
 0022  50			     push ax
 0023  53			     push bx
 0024  51			     push cx
 0025  52			     push dx
 0026  57			     push di
				 
 0027  B0 B6			     mov al, 0b6H
 0029  E6 43			     out 43h, al ; 设置定时器的工作模式
 002B  BA 0012			     mov dx, 12h
 002E  B8 348C			     mov ax, 348ch
 0031  F7 F7			     div di
 0033  E6 42			     out 42h, al  ;设计计时器的频率
				 
 0035  8A C4			     mov al, ah
 0037  E6 42			     out 42h, al ;设计计时器频率
				 
 0039  E4 61			     in al, 61h
 003B  8A E0			     mov ah, al
 003D  0C 03			     or al, 3
 003F  E6 61			     out 61h, al ;设置音频输出控制
 0041				wait1:
 0041  B9 0CF2			     mov cx, 3314
 0044  E8 000D			     call waitf ;等待一段时间
 0047				delay1:
 0047  4B			     dec bx
 0048  75 F7			     jnz wait1 ;用于延迟
				 
 004A  8A C4			     mov al, ah
 004C  E6 61			     out 61h, al; 停止音频输出
				 
 004E  5F			     pop di
 004F  5A			     pop dx
 0050  59			     pop cx
 0051  5B			     pop bx
 0052  58			     pop ax
 0053  C3			     ret 
 0054				gensound endp
				 
				;--------------------------
 0054				waitf proc near
 0054  50			      push ax
 0055				waitf1:
 0055  E4 61			      in al,61h
 0057  24 10			      and al,10h
 0059  38 E0			      cmp al,ah
 005B  74 F8			      je waitf1
 005D  8A E0			      mov ah,al
 005F  E2 F4			      loop waitf1
 0061  58			      pop ax
 0062  C3			      ret ;实现延时
 0063				waitf endp

 0063				music proc near;;--------------发声调用函数----------------
 0063  33 C0			      xor ax, ax
 0065				freg:
 0065  8B 3C			      mov di, [si]
 0067  83 FF FF			      cmp di, 0FFFFH
 006A  74 0F			      je end_mus
 006C  3E: 8B 5E 00		      mov bx, ds:[bp]
 0070  E8 FFAF			      call gensound
 0073  83 C6 02			      add si, 2
 0076  83 C5 02			      add bp, 2
 0079  EB EA			      jmp freg
 007B				end_mus: ;根据存储在mus_freg和mus_time中的音频频率和时间信息,调用gensound过程来生成声音，并通过循环来遍历音乐数据
 007B  C3			      ret		
 007C				music endp

 007C				START1:
 007C  B2 0D				MOV DL,0DH
 007E  B4 02			    MOV AH,2H
 0080  CD 21			    INT 21h
 0082  B2 0A			    MOV DL,0AH
 0084  B4 02			    MOV AH,2H
 0086  CD 21			    INT 21h
				    
 0088  B8 0000			 	MOV AX,0
 008B  BB 0000				MOV BX,0
 008E  B9 0000				MOV CX,0
 0091  BA 0000				MOV DX,0
 0094  B8 ---- R		    MOV AX,DATAS
 0097  8E D8			    MOV DS,AX
 0099  B8 ---- R		    MOV AX,STACK
 009C  8E D0			    MOV SS,AX
 009E  BC 0010			    MOV SP,16
 00A1				NEXT0:  
 00A1  B8 0000					MOV AX,0
 00A4  BB 0000					MOV BX,0
 00A7  B9 0000					MOV CX,0
 00AA  BA 0000					MOV DX,0
 00AD  B8 ---- R			MOV AX,DATAS
 00B0  8E D8			    MOV DS,AX
 00B2  B8 ---- R		    MOV AX,STACK
 00B5  8E D0			    MOV SS,AX
 00B7  BC 0010			    MOV SP,16
 00BA  B4 09					MOV 	AH, 	9    			;09H功能号，显示DS：DL内字符串
 00BC  BA 0247 R		      	MOV 	DX, 	OFFSET MESG1
 00BF  CD 21			      	INT 	21H
 00C1  B4 0A			      	MOV 	AH, 	0AH   			;键盘输入字符串并显示，
 00C3  BA 04A8 R				MOV 	DX, 	OFFSET USERNAME  ;用户输入字符串起始偏移位置
 00C6  CD 21			      	INT 	21H
 00C8  B4 02			      	MOV 	AH, 	2
 00CA  B2 0A			      	MOV 	DL, 	0AH            	;换行字符
 00CC  CD 21			      	INT 	21H
 00CE  B4 09			      	MOV 	AH, 	9             	;显示提示字符串
 00D0  BA 025D R		      	MOV 	DX, 	OFFSET MESG2
 00D3  CD 21			      	INT 	21H
 00D5  B9 0003			      	MOV 	CX, 	_PLEN
 00D8  BE 04A9 R		      	MOV 	SI, 	OFFSET PASSWORD  	;把输入密码起始偏移地址放入SI
 00DB  B4 07			NEXT1:  MOV 	AH, 	07H         	;无回显从键盘读入一个字符
 00DD  CD 21			      	INT 	21H
 00DF  3C 0D			      	CMP 	AL, 	0DH          	;判断输入是否结束
 00E1  74 0F			      	JE 	IND
 00E3  88 04			      	MOV 	[SI], 	AL       		;将输入密码字符放入数据区：PWD
 00E5  B4 02			      	MOV 	AH, 2          			;每输入一位密码显示一个‘*’
 00E7  B2 2A			      	MOV 	DL, '*'
 00E9  CD 21			      	INT 	21H
 00EB  FE 06 04B8 R		      	INC 	PLEN
 00EF  46			      	INC 	SI
 00F0  EB E9			      	JMP 	NEXT1
 00F2  B4 02			IND:  	MOV 	AH, 	2             	;输出换行
 00F4  B2 0A			      	MOV 	DL, 	0AH
 00F6  CD 21			      	INT 	21H
 00F8  BB 04A9 R		     	MOV 	BX, 	OFFSET USERNAME+1    	;[BX]=实际输入字符数
 00FB  8A 07			      	MOV 	AL, 	[BX] 
 00FD  BB 04A2 R		      	MOV     BX, 	OFFSET _USERNAME
 0100  BE 04A4 R		      	MOV 	SI, 	OFFSET _USERNAME+2
 0103  B9 0006			      	MOV 	CX, 	_ULEN          	;设置循环次数
 0106  8A 07			NEXT2:  MOV 	AL, 	[BX]
 0108  38 04			      	CMP 	[SI], 	AL          	;循环比较用户名是否正确
 010A  46			      	INC   	SI
 010B  43			      	INC 	BX
 010C  E2 F8			      	LOOP 	NEXT2
 010E  BB 04A5 R		      	MOV 	BX, 	OFFSET _PASSWORD
 0111  BE 04A9 R		      	MOV 	SI, 	OFFSET PASSWORD
 0114  8A 0E 04B8 R		      	MOV 	CL, 	PLEN
 0118  B5 00			      	MOV 	CH, 	0
 011A  81 F9 0003		      	CMP 	CX, 	_PLEN          	;比较密码长度
 011E  75 0F			      	JNZ 	ERR
 0120  B9 0003			      	MOV 	CX, 	_PLEN
 0123  8A 07			NEXT3:  MOV 	AL, 	[BX]
 0125  38 04			      	CMP 	[SI], 	AL          	;循环比较密码字符是否正确
 0127  75 06			      	JNZ 	ERR
 0129  46			      	INC 	SI
 012A  43			      	INC 	BX
 012B  E2 F6			      	LOOP 	NEXT3
 012D  EB 10			      	JMP 	WEL
 012F  B4 09			ERR:  	MOV 	AH, 	9
 0131  BA 0273 R		      	MOV 	DX, 	OFFSET ERROR 	;输出用户名或密码错误提示
 0134  CD 21			      	INT 	21H
 0136  B4 02			      	MOV 	AH, 	2
 0138  B2 0A			      	MOV 	DL, 	0AH
 013A  CD 21					INT 	21H
 013C  E9 FF62			      	JMP 	NEXT0
 013F  B4 09			WEL:  	MOV 	AH, 	9             	;输出登录成功的提示
 0141  BA 0298 R		      	MOV 	DX, 	OFFSET WELCOME
 0144  CD 21			      	INT 	21H
				      	
 0146  B4 00				MOV AH,0
 0148  CD 16				INT 16H
 014A  B4 07				MOV AH,07H
 014C  CD 21				INT 21H
					
 014E  B8 0003				MOV AX,3
 0151  CD 10				INT 10H

 0153  B8 0000			 	MOV AX,0
 0156  BB 0000				MOV BX,0
 0159  B9 0000				MOV CX,0
 015C  BA 0000				MOV DX,0
 015F  B8 ---- R		    MOV AX,DATAS
 0162  8E D8			    MOV DS,AX
 0164  B4 00			  	mov ah,0  

				  	  	  	
 0166				Sel:
					
 0166  B8 0000				MOV AX,0
 0169  BB 0000				MOV BX,0
 016C  B9 0000				MOV CX,0
 016F  BA 0000				MOV DX,0
 0172  B8 ---- R		    MOV AX,DATAS
 0175  8E D8			    MOV DS,AX
 0177  B4 00			  	mov ah,0  
					
 0179  8D 16 04B9 R			LEA DX,menu
 017D  B4 09				mov ah,9
 017F  CD 21			      int 21h     ;调用21h中断的第9号功能，显示以'$'结束的字符串

 0181  B4 01			      MOV AH,01H      ;键盘输入并显示，字符存于AL中
 0183  CD 21			   	  INT 21H
				   	      
 0185  3C 31			      cmp al, '1'
 0187  74 6F			      je File1
 0189  3C 32			      cmp al,'2'
 018B  74 70			      je File2
 018D  3C 33			      cmp al,'3'
 018F  74 71			      je File3

 0191  8D 16 00FE R		WRONG1: LEA DX,ANS
 0195  B4 09			   	MOV AH,09H
 0197  CD 21			   	INT 21H
 0199  EB CB			   	JMP Sel
				   	
 019B				ASK:    
 019B  8D 16 007A R			LEA DX,ASK_1
 019F  B4 09			   	MOV AH,09H
 01A1  CD 21			   	INT 21H
				    
 01A3  8D 16 00AC R		INPUT:    LEA DX,ASK_2
 01A7  B4 09			   	MOV AH,09H
 01A9  CD 21			   	INT 21H
				   	
 01AB  B4 01			   	MOV AH,01H      ;键盘输入并显示，字符存于AL中
 01AD  CD 21			   	INT 21H
				   	   	
 01AF  3C 59			   	CMP AL,'Y'      ;比较刚输入的字符与Y字符，相等跳转到BEGIN_1中
 01B1  74 11			   	JE BEGIN_1
				   	
 01B3  3C 4E			   	CMP AL,'N'      ;比较刚输入的字符与N字符，相等跳转到END_0中，不等则跳转到ASK重输入
 01B5  75 03 E9 0194		   	JE END_0
					
					
 01BA  8D 16 00FE R		WRONG:	LEA DX,ANS
 01BE  B4 09			   	MOV AH,09H
 01C0  CD 21			   	INT 21H
 01C2  EB DF			   	JMP INPUT
				   	
 01C4				BEGIN_1:
 01C4  B2 0D				mov dl,0DH ;打印换行
 01C6  B4 02			    mov ah,2H
 01C8  CD 21			    int 21H
 01CA  B2 0A			    MOV DL,0AH
 01CC  B4 02			    MOV AH,2h
 01CE  CD 21			    INT 21H
				    
 01D0  8D 3E 005D R		    LEA DI,ARRAY
 01D4  B9 001A			    MOV cx,26
 01D7				Initial: ;初始化清零
 01D7  B8 0000				MOV AX,0
 01DA  89 05			    MOV [DI],AX
 01DC  47			    INC DI
 01DD  E2 F8			    LOOP Initial
				    
				    
				    
 01DF  B8 0000				MOV AX,0
 01E2  BB 0000				MOV BX,0
 01E5  B9 0000				MOV CX,0
 01E8  BA 0000				MOV DX,0
 01EB  C6 06 0077 R 00			MOV OTHERS,0
 01F0  B8 ---- R		    MOV AX,DATAS
 01F3  8E D8			    MOV DS,AX
				    
 01F5  E9 FF6E				JMP Sel

 01F8  BA 0000 R		File1:  MOV DX,OFFSET FNAME1
 01FB  EB 0A					JMP File
 01FD  BA 000A R		File2: MOV DX,OFFSET FNAME2
 0200  EB 05					JMP File
 0202  BA 0014 R		File3: MOV DX,OFFSET FNAME3
 0205  EB 00			    	JMP File

 0207				File:    
 0207  B8 3D00				MOV AX,3D00H ;读打开指定文件
 020A  CD 21			    INT 21H
 020C  B4 00			    MOV ah,0
 020E  73 08			    JNC OPEN ; OPEN SUCCESSFULLY
 0210  BE 001E R		    MOV SI, OFFSET ERROR1
 0213  E8 006E			    CALL DMESS
 0216  EB 25			    JMP OVER

				; JUMP SUCCESSFULLY
 0218				OPEN:
 0218  8B D8				MOV BX,AX; 保存文件句柄
 021A  E8 004F			GO: CALL READ_CHAR ;从文件读一个字符
 021D  72 0B				JC READ_ERROR
 021F  3A 06 0079 R			CMP AL,EOF ; IS OVER?
 0223  74 0B				JZ TYPE_OK
 0225  E8 006A				CALL PUNCH; 记录每个字符个数
 0228  EB F0				JMP GO; 循环读取
					
 022A				READ_ERROR:
 022A  BE 002E R			MOV SI,OFFSET ERROR2
 022D  E8 0054				CALL DMESS

 0230				TYPE_OK:
 0230  B4 3E				MOV AH,3EH
 0232  CD 21				INT 21H ; 关闭文件
 0234  B2 0A				MOV DL,0AH
 0236  B4 02				MOV AH,02H
 0238  CD 21				INT 21H
 023A  E8 00A8				CALL SHOW

 023D				OVER:

 023D  B4 07				MOV AH,07H
 023F  CD 21				INT 21H
					

 0241  8D 16 004B R			LEA DX,STRING3
 0245  B4 09				MOV AH,09H
 0247  CD 21				INT 21H
 0249  33 C0				XOR AX,AX
 024B  A0 0077 R			MOV AL,OTHERS ;将统计的数字送回给AX
 024E  E8 00DE				CALL DISPLAY
 0251  E8 00C2				CALL ENDLINE
 0254  B4 00				MOV AH,0
 0256  CD 16				INT 16H
 0258  B4 07				MOV AH,07H
 025A  CD 21				INT 21H
					
 025C  B8 0003				MOV AX,3
 025F  CD 10				INT 10H
					
 0261  8D 16 00C0 R			LEA DX,ASK_3
 0265  B4 09			   	MOV AH,09H
 0267  CD 21			   	INT 21H
				   	
 0269  E9 FF37			   	JMP INPUT
					
					
 026C				READ_CHAR PROC
 026C  B9 0001				MOV CX,1 ;设置单次读取的字符数为1
 026F  BA 0078 R			MOV DX,OFFSET BUFFER
 0272  B4 3F				MOV AH,3FH; 读取文件
 0274  CD 21				INT 21H
 0276  72 0B				JC R1 ;读出错
 0278  3B C1				CMP AX,CX ;判断文件是否读取完毕
 027A  A0 0079 R			MOV AL,EOF
 027D  72 03				JB R2
 027F  A0 0078 R			MOV AL,BUFFER
 0282  F8			R2:CLC ;清除进位标志位
 0283  C3			R1:RET ;字节出栈
 0284				READ_CHAR ENDP
					
 0284				DMESS PROC
 0284				DMESS1:
 0284  8A 14				MOV DL,[SI]
 0286  46				INC SI
 0287  0A D2				OR DL,DL
 0289  74 06				JZ DMESS2
 028B  B4 02				MOV AH,02H
 028D  CD 21				INT 21H ;显示一个字符
 028F  EB F3				JMP DMESS1
 0291  C3			DMESS2:RET ;用栈中的数据，修改IP的内容，从而实现近转移，相当于 pop IP
 0292				DMESS ENDP

 0292				PUNCH PROC
 0292  52				PUSH DX
 0293  8A D0				MOV DL,AL
 0295  B4 02				MOV AH,02H
 0297  CD 21				INT 21H
 0299  5A				POP DX
 029A  B1 41				MOV CL,41H
 029C  8D 3E 005D R			LEA DI,ARRAY
 02A0  8A E8				MOV CH,AL
 02A2  38 CD				CMP CH,CL
 02A4  72 3A				JB OTHER ;当字符小于41H（A），其余字符数目加一
 02A6  80 FD 5A				CMP CH,5AH
 02A9  77 0D				JA HIGHER2; 当字符大于5AH(Z),继续比较
 02AB  38 CD			H1:CMP CH,CL
 02AD  74 27				JE CHAR ; 对应字母个数++
 02AF  77 00				JA LOOP1
 02B1				LOOP1:
 02B1  FE C1				INC CL
 02B3  83 C7 01				ADD DI,1
 02B6  EB F3				JMP H1
					
 02B8				HIGHER2:
 02B8  B1 61				MOV CL,61H ;
 02BA  8D 3E 005D R			LEA DI,ARRAY
 02BE  8A E8				MOV CH,AL
 02C0  38 CD				CMP CH,CL
 02C2  72 1C				JB OTHER ;当字符小于61H，其余字符数目加一
 02C4  80 FD 7A				CMP CH,7AH
 02C7  77 17				JA OTHER ;当字符大于7AH，其余字符加一
 02C9  38 CD			H2: CMP CH,CL
 02CB  74 09				JE CHAR ; 对应字母个数加一
 02CD  77 00				JA LOOP2
					
 02CF				LOOP2:
 02CF  FE C1				INC CL
 02D1  83 C7 01				ADD DI,1
 02D4  EB F3				JMP H2
					
 02D6				CHAR:
 02D6  32 ED				XOR CH,CH
 02D8  8A 2D				MOV CH,[DI]
					
 02DA  FE C5				INC CH
 02DC  88 2D				MOV [DI],CH
 02DE  EB 04				JMP TG
 02E0				OTHER:
 02E0  FE 06 0077 R			INC OTHERS
				; 比较结束
 02E4  C3			TG:	RET
 02E5					PUNCH ENDP
					
 02E5				SHOW PROC
 02E5  8D 36 005D R			LEA SI,ARRAY
 02E9  BF 0041				MOV DI,41H
 02EC				LOOP3:
 02EC  8D 16 003D R			LEA DX,STRING1
 02F0  B4 09				MOV AH,09H
 02F2  CD 21				INT 21H
 02F4  8B D7				MOV DX,DI
 02F6  B4 02				MOV AH,02H
 02F8  CD 21				INT 21H
 02FA  8D 16 0048 R			LEA DX,STRING2
 02FE  B4 09				MOV AH,09H
 0300  CD 21				INT 21H
 0302  33 C0				XOR AX,AX
 0304  8A 04				MOV AL,[SI] ;将统计的数字送回给AX
 0306  83 C6 01				ADD SI,1
 0309  E8 0023				CALL DISPLAY
 030C  E8 0007				CALL ENDLINE
 030F  47				INC DI
 0310  83 FF 5B				CMP DI,5BH ;判断DI是否是字母
 0313  72 D7				JB LOOP3

 0315  C3				RET
 0316					SHOW ENDP
					
 0316				ENDLINE PROC NEAR
 0316  B2 20				MOV DL,20H
 0318  B4 02				MOV AH,02H
 031A  CD 21				INT 21H

 031C  B2 20				MOV DL,20H
 031E  B4 02				MOV AH,02H
 0320  CD 21				INT 21H
 0322  B2 20				MOV DL,20H
 0324  B4 02				MOV AH,02H
					
 0326  CD 21				INT 21H
 0328  B2 20				MOV DL,20H
 032A  B4 02				MOV AH,02H
 032C  CD 21				INT 21H
 032E  C3				RET
 032F					ENDLINE ENDP
					
 032F				DISPLAY PROC NEAR
 032F  B3 0A				MOV BL,10
 0331  F6 F3				DIV BL ;以十进制数方式输出
 0333  50				PUSH AX
					; 输出十位数
 0334  8A D0				MOV DL,AL
 0336  80 C2 30				ADD DL,30H
 0339  B4 02				MOV AH,02H
 033B  CD 21				INT 21H
 033D  58				POP AX
					;输出个位数
 033E  8A D4				MOV DL,AH
 0340  80 C2 30				ADD DL,30H
 0343  B4 02				MOV AH,02H
 0345  CD 21				INT 21H
 0347  B2 20				MOV DL,20H
 0349  B4 02				MOV AH,02H
 034B  CD 21				INT 21H
 034D  C3				RET
 034E					DISPLAY ENDP
					

 034E				END_0:
 034E  B8 4C00				mov ax,4c00h
 0351  CD 21				int 21h
					
 0353				CODES ENDS
				    END START








Microsoft (R) Macro Assembler Version 6.11		    08/28/23 21:10:03
tempfile.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

ADDRESS  . . . . . . . . . . . .	Proc
SHOWBM . . . . . . . . . . . . .	Proc
empty  . . . . . . . . . . . . .	Proc


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

CODES  . . . . . . . . . . . . .	16 Bit	 0353	  Para	  Private 
DATAS  . . . . . . . . . . . . .	16 Bit	 0554	  Para	  Private 
stack  . . . . . . . . . . . . .	16 Bit	 0384	  Para	  Stack	  


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

DISPLAY  . . . . . . . . . . . .	P Near	 032F	  CODES	Length= 001F Public
DMESS  . . . . . . . . . . . . .	P Near	 0284	  CODES	Length= 000E Public
  DMESS1 . . . . . . . . . . . .	L Near	 0284	  CODES	
  DMESS2 . . . . . . . . . . . .	L Near	 0291	  CODES	
ENDLINE  . . . . . . . . . . . .	P Near	 0316	  CODES	Length= 0019 Public
PUNCH  . . . . . . . . . . . . .	P Near	 0292	  CODES	Length= 0053 Public
  H1 . . . . . . . . . . . . . .	L Near	 02AB	  CODES	
  LOOP1  . . . . . . . . . . . .	L Near	 02B1	  CODES	
  HIGHER2  . . . . . . . . . . .	L Near	 02B8	  CODES	
  H2 . . . . . . . . . . . . . .	L Near	 02C9	  CODES	
  LOOP2  . . . . . . . . . . . .	L Near	 02CF	  CODES	
  CHAR . . . . . . . . . . . . .	L Near	 02D6	  CODES	
  OTHER  . . . . . . . . . . . .	L Near	 02E0	  CODES	
  TG . . . . . . . . . . . . . .	L Near	 02E4	  CODES	
READ_CHAR  . . . . . . . . . . .	P Near	 026C	  CODES	Length= 0018 Public
  R2 . . . . . . . . . . . . . .	L Near	 0282	  CODES	
  R1 . . . . . . . . . . . . . .	L Near	 0283	  CODES	
SHOW . . . . . . . . . . . . . .	P Near	 02E5	  CODES	Length= 0031 Public
  LOOP3  . . . . . . . . . . . .	L Near	 02EC	  CODES	
gensound . . . . . . . . . . . .	P Near	 0022	  CODES	Length= 0032 Public
  wait1  . . . . . . . . . . . .	L Near	 0041	  CODES	
  delay1 . . . . . . . . . . . .	L Near	 0047	  CODES	
music  . . . . . . . . . . . . .	P Near	 0063	  CODES	Length= 0019 Public
  freg . . . . . . . . . . . . .	L Near	 0065	  CODES	
  end_mus  . . . . . . . . . . .	L Near	 007B	  CODES	
waitf  . . . . . . . . . . . . .	P Near	 0054	  CODES	Length= 000F Public
  waitf1 . . . . . . . . . . . .	L Near	 0055	  CODES	


Symbols:

                N a m e                 Type     Value    Attr

ANS  . . . . . . . . . . . . . .	Byte	 00FE	  DATAS	
ARRAY  . . . . . . . . . . . . .	Byte	 005D	  DATAS	
ASK_1  . . . . . . . . . . . . .	Byte	 007A	  DATAS	
ASK_2  . . . . . . . . . . . . .	Byte	 00AC	  DATAS	
ASK_3  . . . . . . . . . . . . .	Byte	 00C0	  DATAS	
ASK  . . . . . . . . . . . . . .	L Near	 019B	  CODES	
BEGIN_1  . . . . . . . . . . . .	L Near	 01C4	  CODES	
BUFFER . . . . . . . . . . . . .	Byte	 0078	  DATAS	
END_0  . . . . . . . . . . . . .	L Near	 034E	  CODES	
EOF  . . . . . . . . . . . . . .	Byte	 0079	  DATAS	
ERROR1 . . . . . . . . . . . . .	Byte	 001E	  DATAS	
ERROR2 . . . . . . . . . . . . .	Byte	 002E	  DATAS	
ERROR  . . . . . . . . . . . . .	Byte	 0273	  DATAS	
ERR  . . . . . . . . . . . . . .	L Near	 012F	  CODES	
FNAME1 . . . . . . . . . . . . .	Byte	 0000	  DATAS	
FNAME2 . . . . . . . . . . . . .	Byte	 000A	  DATAS	
FNAME3 . . . . . . . . . . . . .	Byte	 0014	  DATAS	
File1  . . . . . . . . . . . . .	L Near	 01F8	  CODES	
File2  . . . . . . . . . . . . .	L Near	 01FD	  CODES	
File3  . . . . . . . . . . . . .	L Near	 0202	  CODES	
File . . . . . . . . . . . . . .	L Near	 0207	  CODES	
GO . . . . . . . . . . . . . . .	L Near	 021A	  CODES	
IND  . . . . . . . . . . . . . .	L Near	 00F2	  CODES	
INPUT  . . . . . . . . . . . . .	L Near	 01A3	  CODES	
Initial  . . . . . . . . . . . .	L Near	 01D7	  CODES	
MESG1  . . . . . . . . . . . . .	Byte	 0247	  DATAS	
MESG2  . . . . . . . . . . . . .	Byte	 025D	  DATAS	
NEXT0  . . . . . . . . . . . . .	L Near	 00A1	  CODES	
NEXT1  . . . . . . . . . . . . .	L Near	 00DB	  CODES	
NEXT2  . . . . . . . . . . . . .	L Near	 0106	  CODES	
NEXT3  . . . . . . . . . . . . .	L Near	 0123	  CODES	
OPEN . . . . . . . . . . . . . .	L Near	 0218	  CODES	
OTHERS . . . . . . . . . . . . .	Byte	 0077	  DATAS	
OVER . . . . . . . . . . . . . .	L Near	 023D	  CODES	
PASSWORD . . . . . . . . . . . .	Byte	 04A9	  DATAS	
PLEN . . . . . . . . . . . . . .	Byte	 04B8	  DATAS	
READ_ERROR . . . . . . . . . . .	L Near	 022A	  CODES	
START1 . . . . . . . . . . . . .	L Near	 007C	  CODES	
START  . . . . . . . . . . . . .	L Near	 0000	  CODES	
STRING1  . . . . . . . . . . . .	Byte	 003D	  DATAS	
STRING2  . . . . . . . . . . . .	Byte	 0048	  DATAS	
STRING3  . . . . . . . . . . . .	Byte	 004B	  DATAS	
Sel  . . . . . . . . . . . . . .	L Near	 0166	  CODES	
TYPE_OK  . . . . . . . . . . . .	L Near	 0230	  CODES	
USERNAME . . . . . . . . . . . .	Byte	 04A8	  DATAS	
WELCOME  . . . . . . . . . . . .	Byte	 0298	  DATAS	
WEL  . . . . . . . . . . . . . .	L Near	 013F	  CODES	
WRONG1 . . . . . . . . . . . . .	L Near	 0191	  CODES	
WRONG  . . . . . . . . . . . . .	L Near	 01BA	  CODES	
_PASSWORD  . . . . . . . . . . .	Byte	 04A5	  DATAS	
_PLEN  . . . . . . . . . . . . .	Number	 0003h	 
_ULEN  . . . . . . . . . . . . .	Number	 0006h	 
_USERNAME  . . . . . . . . . . .	Byte	 04A2	  DATAS	
exit . . . . . . . . . . . . . .	L Near	 0020	  CODES	
infor1 . . . . . . . . . . . . .	Byte	 012B	  DATAS	
menu . . . . . . . . . . . . . .	Byte	 04B9	  DATAS	
mus_freg . . . . . . . . . . . .	Word	 015D	  DATAS	
mus_time . . . . . . . . . . . .	Word	 01D3	  DATAS	

	   0 Warnings
	   0 Errors
